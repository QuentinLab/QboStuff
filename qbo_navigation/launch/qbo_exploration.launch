<launch>

    <!--- Run the kinect -->
    <include file="$(find qbo_bringup)/launch/includes/3dsensor.launch" >
      <arg name="rgb_processing" value="false" />
      <arg name="depth_registration" value="false" />
      <arg name="depth_processing" value="false" />
    
      <arg name="scan_topic" value="/scan" />
    </include>
    
    <!--- Run gmapping -->
    <include file="$(find qbo_navigation)/launch/includes/gmapping_qbo.launch" />
    
    <!-- Run the map server -->
    <!--<arg name="map_file" default="$(find qbo_navigation)/maps/new_map_home.yaml"/>
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" /> -->
    
    <!--- Run Move Base -->
    <include file="$(find qbo_navigation)/launch/includes/move_base_qbo.launch" />
    
    <!--- Run AMCL -->
    <!-- <include file="$(find qbo_navigation)/launch/includes/amcl_qbo.launch" /> -->

    <!-- Set to your sensor's range -->
    <arg name="sensor_range" default="1.5"/>

    <!-- <node pkg="frontier_exploration" type="explore_client" name="explore_client" output="screen"/> -->

    <node pkg="frontier_exploration" type="explore_server" name="explore_server" output="screen" >

        <param name="frequency" type="double" value="5.0"/>
        <param name="goal_aliasing" type="double" value="$(arg sensor_range)"/>

        #All standard costmap_2d parameters as in move_base, other than BoundedExploreLayer
        <rosparam ns="explore_costmap" subst_value="true">
            #footprint: [[-0.15, -0.15], [-0.15, 0.15], [0.15, 0.15], [0.15, -0.15]]
            robot_radius: 0.15
            
            transform_tolerance: 0.5
            update_frequency: 1.0
            publish_frequency: 0.5

            #must match incoming static map
            global_frame: /map
            robot_base_frame: /base_footprint
            resolution: 0.05

            rolling_window: false
            track_unknown_space: true

            plugins: 

                - {name: static,           type: "costmap_2d::StaticLayer"}           
                - {name: explore_boundary, type: "frontier_exploration::BoundedExploreLayer"}
                #Can disable sensor layer if gmapping is fast enough to update scans
                - {name: sensor,           type: "costmap_2d::ObstacleLayer"}
                - {name: inflation,        type: "costmap_2d::InflationLayer"}

            static:
                #Can pull data from gmapping, map_server or a non-rolling costmap            
                map_topic: /map
                # map_topic: move_base/global_costmap/costmap   
                subscribe_to_updates: true

            explore_boundary:
                resize_to_boundary: true
                frontier_travel_point: middle
                #set to false for gmapping, true if re-exploring a known area
                explore_clear_space: false

            sensor:
                observation_sources: scan front_left front_right
                scan:
                  data_type: LaserScan
                  sensor_frame: camera
                  topic: /scan
                  marking: true
                  clearing: true
                front_left:
                  data_type: PointCloud
                  sensor_frame: front_left_addon
                  topic: /distance_sensors_state/front_left_srf10
                  marking: true
                  clearing: true
                  min_obstacle_height: 0.0
                  max_obstacle_height: 0.2
                  obstacle_range: 0.4
                  raytrace_range: 0.5
                front_right:
                  data_type: PointCloud
                  sensor_frame: front_right_addon
                  topic: /distance_sensors_state/front_right_srf10
                  marking: true
                  clearing: true
                  min_obstacle_height: 0.0
                  max_obstacle_height: 0.2
                  obstacle_range: 0.4
                  raytrace_range: 0.5

            inflation:
                inflation_radius: 0.5
      </rosparam>
    </node>

</launch>
